syntax = "proto3";

package grabber;

service AcademyService {
  rpc GetAcademy (GetAcademyRequest) returns (Academy) {}
  rpc ListAcademies (ListAcademiesRequest) returns (ListAcademiesResponse) {}
}

message Academy {
  string id = 1;
  string name = 2;
  string abbreviation = 3;
  string alias = 4;
  string website = 5;
  string endpoint = 6;
  string version = 7;
}

message GetAcademyRequest {
  string id = 1;
}

message ListAcademiesRequest {
  //string parent = 1;
  enum OrderBy {
    DEFAULT = 0;
    NAME = 1;
    ABBREVIATION = 2;
    ALIAS = 3;
  }
  OrderBy order_by = 2;
  //string page_token = 3;
}

message ListAcademiesResponse {
  repeated Academy academies = 1;
  string next_page_token = 2;
}

// Faculties

service FacultyService {
  rpc GetFaculty (GetFacultyRequest) returns (Faculty) {}
  rpc ListFaculties (ListFacultiesRequest) returns (ListFacultiesResponse) {}
}

message Faculty {
  string id = 1;
  string name = 2;
  string abbreviation = 3;
  string head = 4;
  string phone = 5;
  string room = 6;
}

message GetFacultyRequest {
  string id = 1;
  string academy_id = 2;
}

message ListFacultiesRequest {
  string academy_id = 1;
  //string parent = 2;
  enum OrderBy {
    DEFAULT = 0;
    NAME = 1;
    ABBREVIATION = 2;
  }
  OrderBy order_by = 3;
  //string page_token = 4;
}

message ListFacultiesResponse {
  repeated Faculty faculties = 1;
  string next_page_token = 2;
}

// Groups

service GroupService {
  rpc GetGroup (GetGroupRequest) returns (Group) {}
  rpc ListGroups (ListGroupsRequest) returns (ListGroupsResponse) {}
}

message Group {
  string id = 1;
  string name = 2;
  int32 year = 3;
  string specialityId = 4;
  string speciality = 5;
  int32 countAll = 6;
  int32 countCommon = 7;
  int32 countTargeted = 8;
  int32 countSpecial = 9;
  string curricula = 10;
}

message GetGroupRequest {
  string id = 1;
  string academy_id = 2;
}

message ListGroupsRequest {
  string academy_id = 1;
  //string parent = 2;
  enum OrderBy {
    DEFAULT = 0;
    NAME = 1;
    YEAR = 2;
  }
  OrderBy order_by = 3;
  enum FilterBy {
    ALL = 0;
    FACULTY = 1;
    SPECIALITY = 2;
  }
  FilterBy filter_by = 4;
  int32 related_id = 5;
  //string page_token = 6;
}

message ListGroupsResponse {
  repeated Group groups = 1;
  string next_page_token = 2;
}
