syntax = "proto3";

package grabber;

service AcademyService {
  rpc GetAcademy (GetAcademyRequest) returns (ListAcademiesResponse) {}
  rpc ListAcademies (ListAcademiesRequest) returns (ListAcademiesResponse) {}
}

message Academy {
  string type = 1;
  string id = 2;
  message Attributes {
    string name = 1;
    string abbreviation = 2;
    string alias = 3;
    string website = 4;
    string endpoint = 5;
    string version = 6;
  }
  Attributes attributes = 3;
  message Relationships {
  }
  Relationships relationships = 4;
}

message GetAcademyRequest {
  string id = 1;
}

message ListAcademiesRequest {
  //string parent = 1;
  enum OrderBy {
    DEFAULT = 0;
    NAME = 1;
    ABBREVIATION = 2;
    ALIAS = 3;
  }
  OrderBy order_by = 2;
  //string page_token = 3;
}

message ListAcademiesResponse {
  repeated Academy data = 1;
  string next_page_token = 2;
}

// Faculties

service FacultyService {
  rpc GetFaculty (GetFacultyRequest) returns (ListFacultiesResponse) {}
  rpc ListFaculties (ListFacultiesRequest) returns (ListFacultiesResponse) {}
}

message Faculty {
  string type = 1;
  string id = 2;
  message Attributes {
    string name = 1;
    string abbreviation = 2;
    string head = 3;
    string phone = 4;
    string room = 5;
  }
  Attributes attributes = 3;
  message Relationships {
  }
  Relationships relationships = 4;
}

message GetFacultyRequest {
  string id = 1;
  string academy_id = 2;
}

message ListFacultiesRequest {
  string academy_id = 1;
  //string parent = 2;
  enum OrderBy {
    DEFAULT = 0;
    NAME = 1;
    ABBREVIATION = 2;
  }
  OrderBy order_by = 3;
  //string page_token = 4;
}

message ListFacultiesResponse {
  repeated Faculty data = 1;
}

// Groups

service GroupService {
  rpc GetGroup (GetGroupRequest) returns (Group) {}
  rpc ListGroups (ListGroupsRequest) returns (ListGroupsResponse) {}
}

message Group {
  string type = 1;
  string id = 2;
  message Attributes {
    string name = 1;
    int32 year = 2;
    string specialityId = 3;
    string speciality = 4;
    int32 countAll = 5;
    int32 countCommon = 6;
    int32 countTargeted = 7;
    int32 countSpecial = 8;
    string curricula = 9;
  }
  Attributes attributes = 3;
  message Relationships {
  }
  Relationships relationships = 4;
}

message GetGroupRequest {
  string id = 1;
  string academy_id = 2;
}

message ListGroupsRequest {
  string academy_id = 1;
  //string parent = 2;
  enum OrderBy {
    DEFAULT = 0;
    NAME = 1;
    YEAR = 2;
  }
  OrderBy order_by = 3;
  enum FilterBy {
    ALL = 0;
    FACULTY = 1;
    SPECIALITY = 2;
  }
  FilterBy filter_by = 4;
  int32 related_id = 5;
  //string page_token = 6;
}

message ListGroupsResponse {
  repeated Group groups = 1;
  string next_page_token = 2;
}

// Divisions

service DivisionService {
  rpc GetDivision (GetDivisionRequest) returns (ListDivisionsResponse) {}
  rpc ListDivisions (ListDivisionsRequest) returns (ListDivisionsResponse) {}
}

message Division {
  string type = 1;
  string id = 2;
  message Attributes {
    string name = 1;
    string abbreviation = 2;
    string head = 3;
    string phone = 4;
    string room = 5;
  }
  Attributes attributes = 3;
  message Relationships {
  }
  Relationships relationships = 4;
}

message GetDivisionRequest {
  string id = 1;
  string academy_id = 2;
}

message ListDivisionsRequest {
  string academy_id = 1;
  //string parent = 2;
  enum OrderBy {
    DEFAULT = 0;
    NAME = 1;
    ABBREVIATION = 2;
  }
  OrderBy order_by = 3;
  //string page_token = 4;
}

message ListDivisionsResponse {
  repeated Division data = 1;
  string next_page_token = 2;
}

// Specialities

service SpecialityService {
  rpc GetSpeciality (GetSpecialityRequest) returns (ListSpecialitiesResponse) {}
  rpc ListSpecialities (ListSpecialitiesRequest) returns (ListSpecialitiesResponse) {}
  rpc ListFacultySpecialities (ListFacultySpecialitiesRequest) returns (ListSpecialitiesResponse) {}
}

message Speciality {
  string type = 1; // specialities
  string id = 2;
  message Attributes {
    string shortName = 1;
    string name = 2;
    string code = 7;
    string qualification = 8;
  }
  Attributes attributes = 3;
  message Relationships {
    ListDivisionsResponse division = 1;
    ListFacultiesResponse faculty = 2;
  }
  Relationships relationships = 4;
}

message GetSpecialityRequest {
  string id = 1;
  string academy_id = 2;
}

message ListSpecialitiesRequest {
  string academy_id = 1;
  //string parent = 2;
  enum OrderBy {
    DEFAULT = 0;
    NAME = 1;
    ABBREVIATION = 2;
  }
  OrderBy order_by = 3;
  //string page_token = 4;
}

message ListFacultySpecialitiesRequest {
  string academy_id = 1;
  string faculty_id = 2;
  //string parent = 3;
  enum OrderBy {
    DEFAULT = 0;
    NAME = 1;
    ABBREVIATION = 2;
  }
  OrderBy order_by = 4;
  //string page_token = 5;
}

message ListSpecialitiesResponse {
  repeated Speciality data = 1;
  message Included {
    Division division = 1;
    Faculty faculty = 2;
  }
  repeated Faculty included = 14;
}
